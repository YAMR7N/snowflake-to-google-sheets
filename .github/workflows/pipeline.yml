name: LLM Judge Data Pipeline

on:
  schedule:
    # 11:00 AM UTC (adjust timezone as needed)
    - cron: '0 11 * * *'
    # 2:00 PM UTC  
    - cron: '0 14 * * *'
    # 6:00 PM UTC
    - cron: '0 18 * * *'
  
  # Allow manual trigger for testing
  workflow_dispatch:
    inputs:
      date_str:
        description: 'Date string (YYYY-MM-DD) - leave empty for yesterday'
        required: false
        default: ''
      only_metric:
        description: 'Run specific metric only (e.g., tools, transfer_escalation)'
        required: false
        default: ''
      only_departments:
        description: 'Run specific departments only (e.g., "CC Sales,Doctors")'
        required: false
        default: ''

jobs:
  run-pipeline:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
      
    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: 📦 Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
        
    - name: 🔧 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: 🔐 Create Google credentials file
      run: |
        echo '${{ secrets.GOOGLE_CREDENTIALS_JSON }}' > credentials.json
        chmod 600 credentials.json
        
    - name: 🚀 Run Snowflake to Sheets Pipeline
      env:
        SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
        SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
        SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
        SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
        SNOWFLAKE_ROLE: ${{ secrets.SNOWFLAKE_ROLE }}
        SNOWFLAKE_DATABASE: ${{ secrets.SNOWFLAKE_DATABASE }}
        SNOWFLAKE_SCHEMA: ${{ secrets.SNOWFLAKE_SCHEMA }}
        DATE_STR: ${{ github.event.inputs.date_str || '' }}
        ONLY_METRIC: ${{ github.event.inputs.only_metric || '' }}
        ONLY_DEPARTMENTS: ${{ github.event.inputs.only_departments || '' }}
      run: |
        python snowflake_to_sheets.py
        
    - name: 🧹 Cleanup credentials
      if: always()
      run: |
        rm -f credentials.json
        
    - name: 📊 Upload logs on failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: pipeline-logs-${{ github.run_number }}
        path: |
          *.log
          logs/
        retention-days: 7
